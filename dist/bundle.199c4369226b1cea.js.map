{"version":3,"file":"bundle.199c4369226b1cea.js","mappings":"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","sources":["webpack://tetris/./src/game.js"],"sourcesContent":["/* TETRIS */\r\n\r\n/*\r\n\r\nTODO:\r\n\r\n.Next\r\n \r\n [ ] 10 times multiplier for perfect clears\r\n [ ] Add Attack method\r\n do pieces on matrix2 start at row 2?\r\n\r\n\r\nPLAN:\r\n1. Get rid of Matrixs and instead write a function to create Matricies\r\n2. Combine whatever functions possible that are 1st player or second player into single functions. \r\n    - can either have parameters and arguements sent to function or could have a global variable that gets updated constantly from 1 -> 2 -> undefined. and updated back to undefined at end of function.\r\n\r\n3. add ability to update score before 2nd player looses if 2nd player has higher score than 1st player who already lost\r\n4. Add Attack\r\n5. Add Controls popup\r\n6. Add Starting Screen\r\n7. Add Sounds/animations and polish design\r\n\r\n\r\n*/\r\n\r\n//////////////////////////////* SETUP *////////////////////////////////\r\n\r\n//* BOARD\r\n\r\nconst COLS = 10;\r\nconst ROWS = 17;\r\n\r\nlet MATRIX = [\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [-9, -9, -9, -9, -9, -9, -9, -9, -9, -9],\r\n];\r\n\r\nlet MATRIX2 = [\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [-9, -9, -9, -9, -9, -9, -9, -9, -9, -9],\r\n];\r\n\r\n//* TETRIMINOS\r\n\r\nconst L = [\r\n  [0, 0, 0, 1],\r\n  [0, 1, 1, 1],\r\n];\r\n\r\nconst J = [\r\n  [2, 0, 0, 0],\r\n  [2, 2, 2, 0],\r\n];\r\n\r\nconst S = [\r\n  [0, 0, 3, 3],\r\n  [0, 3, 3, 0],\r\n];\r\n\r\nconst Z = [\r\n  [4, 4, 0, 0],\r\n  [0, 4, 4, 0],\r\n];\r\n\r\nconst O = [\r\n  [0, 5, 5, 0],\r\n  [0, 5, 5, 0],\r\n];\r\n\r\nconst T = [\r\n  [0, 6, 6, 6],\r\n  [0, 0, 6, 0],\r\n];\r\n\r\nconst I = [\r\n  [7, 7, 7, 7],\r\n  [0, 0, 0, 0],\r\n];\r\n\r\nconst TETRIMINOS = [L, J, S, Z, O, T, I];\r\n\r\n//////////////////////////* PLAY/PAUSE/RESTART *////////////////////////////\r\n\r\nlet pauseAll = true;\r\n\r\nconst play = document.getElementById(\"play\");\r\n\r\nconst playFunc = () => {\r\n  if (pauseAll && !gameEnded && !gameEnded2) {\r\n    document.getElementById(\"play\").style.display = \"none\";\r\n    document.getElementById(\"restart\").style.display = \"flex\";\r\n    pauseAll = false;\r\n    animatePage();\r\n    placeOnMatrix();\r\n    placeOnMatrix2();\r\n    levelTimer = setInterval(levelFunc, 1000);\r\n    dropLoop = setInterval(dropInterval, rate[rateIndex]);\r\n    dropLoop2 = setInterval(dropInterval2, rate[rateIndex]);\r\n    timeStart = performance.now();\r\n  }\r\n};\r\n\r\nplay.addEventListener(\"click\", playFunc);\r\n\r\nconst pauseFunc = () => {\r\n  if (pauseAll) {\r\n    pauseAll = false;\r\n    animatePage();\r\n    document.getElementById(\"pause-btn\").style.color = \"var(--color-piece0)\";\r\n  } else if (!pauseAll) {\r\n    pauseAll = true;\r\n    cancelAnimationFrame(animateInterval);\r\n    document.getElementById(\"pause-btn\").style.color = \"var(--color-piece4)\";\r\n  }\r\n};\r\n\r\nconst pause = document.getElementById(\"pause-btn\");\r\npause.addEventListener(\"click\", pauseFunc);\r\n\r\nconst restartFunc = () => {\r\n  document.getElementById(\"restart\").style.display = \"none\";\r\n  document.getElementById(\"play\").style.display = \"flex\";\r\n  restart();\r\n};\r\n\r\nconst restartBtn = document.getElementById(\"restart\");\r\nrestartBtn.addEventListener(\"click\", restartFunc);\r\n\r\nconst restart = () => {\r\n  pauseAll = true;\r\n  paused = false;\r\n\r\n  clearInterval(dropLoop2);\r\n  clearInterval(dropLoop);\r\n  clearInterval(levelTimer);\r\n\r\n  level = 1;\r\n  timer = 60;\r\n  points1 = 0;\r\n  points2 = 0;\r\n\r\n  document.getElementById(\"points1\").innerHTML = points1;\r\n  document.getElementById(\"points2\").innerHTML = points2;\r\n  document.getElementById(\"level\").innerHTML = level;\r\n  document.getElementById(\"time\").innerHTML = timer;\r\n\r\n  MATRIX = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [-9, -9, -9, -9, -9, -9, -9, -9, -9, -9],\r\n  ];\r\n\r\n  gameEnded = false;\r\n  rateIndex = 0;\r\n  activeTetrimino = [];\r\n\r\n  MATRIX2 = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [-9, -9, -9, -9, -9, -9, -9, -9, -9, -9],\r\n  ];\r\n\r\n  gameEnded2 = false;\r\n  activeTetrimino2 = [];\r\n\r\n  cancelAnimationFrame(animateInterval);\r\n  animateInterval = null;\r\n  updateColor();\r\n  updateColor2();\r\n};\r\n\r\n//////////////////////////////* GAME LOOPS/TIMERS ///////////////////////////////\r\n\r\nlet timer = 60;\r\nlet level = 1;\r\nconst rate = [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100];\r\nlet rateIndex = 0;\r\nlet levelTimer;\r\n\r\nlet dropLoop;\r\nlet dropLoop2;\r\n\r\nlet animateInterval;\r\n\r\nlet timeStart = null;\r\nlet timeLapsed = null;\r\nlet drop1st = false; // allows for drop keydown event to be triggered twice as often as spin and right and left\r\n\r\nconst animatePage = () => {\r\n  if (!pauseAll) {\r\n    if (timeStart === null) timeStart = performance.now();\r\n    timeLapsed = performance.now();\r\n\r\n    if (timeLapsed - timeStart > 59) {\r\n      if (!drop1st) {\r\n        executeDrop();\r\n        drop1st = true;\r\n      }\r\n    }\r\n\r\n    if (timeLapsed - timeStart > 120) {\r\n      executeMoves();\r\n      timeStart = performance.now();\r\n      drop1st = false;\r\n    }\r\n\r\n    if (!gameEnded2) updateColor2();\r\n    if (!gameEnded) updateColor();\r\n    animateInterval = requestAnimationFrame(animatePage);\r\n  }\r\n};\r\n\r\nconst levelFunc = () => {\r\n  if (!pauseAll) {\r\n    document.getElementById(\"time\").innerHTML = timer;\r\n    timer--;\r\n    if (timer === 0) {\r\n      rateIndex++;\r\n      document.getElementById(\"time\").innerHTML = \"New Level\";\r\n      timer = 60;\r\n      level++;\r\n      document.getElementById(\"level\").innerHTML = level;\r\n      changeLevel();\r\n    }\r\n  }\r\n};\r\n\r\nconst dropInterval = () => {\r\n  if (moves[40].pressed === false && !pauseAll && !paused) {\r\n    stopTest();\r\n    lowerTetrimino();\r\n  }\r\n};\r\n\r\nlet dropInterval2 = () => {\r\n  if (moves[83].pressed === false && !pauseAll && !paused2) {\r\n    stopTest2();\r\n    lowerTetrimino2();\r\n  }\r\n};\r\n\r\nconst changeLevel = () => {\r\n  if (level < 9) {\r\n    if (!currentAttackGoing) {\r\n      clearInterval(dropLoop2);\r\n      dropLoop2 = setInterval(dropInterval2, rate[rateIndex]);\r\n\r\n      if (!currentAttackGoing2) clearInterval(dropLoop);\r\n      dropLoop = setInterval(dropInterval, rate[rateIndex]);\r\n    }\r\n  }\r\n};\r\n\r\n//////////////////////////////* PLACING AND LOWERING TETRIMINOS ////////////////////////////////\r\n\r\nlet activeColor = null;\r\nlet tetrimino = null;\r\n\r\nlet activeColor2 = null;\r\nlet tetrimino2 = null;\r\n\r\nlet activeTetrimino = [];\r\nlet activeTetrimino2 = [];\r\n\r\nlet stopped = false;\r\nlet stopped2 = false;\r\n\r\nlet gameEnded = false;\r\nlet gameEnded2 = false;\r\n\r\nlet paused = false;\r\nlet paused2 = false;\r\n\r\nconst sleep = (time) => {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n};\r\n\r\nasync function placeOnMatrix() {\r\n  paused = true;\r\n  currentSpin = 0;\r\n\r\n  tetrimino = TETRIMINOS[Math.floor(Math.random() * 7)];\r\n  let activeColorFiltered = tetrimino[0].filter((color) => color > 0);\r\n  activeColor = activeColorFiltered[0];\r\n\r\n  activeTetrimino = [];\r\n\r\n  for (let i = 3; i < 6; i++) {\r\n    if (MATRIX[0][i] < 0 || MATRIX[1][i] < 0) {\r\n      gameEnded = true;\r\n    }\r\n  }\r\n  await sleep(500);\r\n\r\n  if (!gameEnded) {\r\n    for (let i = 3; i < 7; i++) {\r\n      if (tetrimino[0][i - 3] > 0) {\r\n        MATRIX[0][i] = activeColor;\r\n        activeTetrimino.push([0, i]);\r\n      }\r\n    }\r\n    for (let i = 3; i < 7; i++) {\r\n      if (tetrimino[1][i - 3] > 0) {\r\n        MATRIX[1][i] = activeColor;\r\n        activeTetrimino.push([1, i]);\r\n      }\r\n    }\r\n  }\r\n  endGame();\r\n  paused = false;\r\n}\r\n\r\nasync function placeOnMatrix2() {\r\n  paused2 = true;\r\n  currentSpin2 = 0;\r\n\r\n  // Picking Random Tetrimino\r\n  tetrimino2 = TETRIMINOS[Math.floor(Math.random() * 7)];\r\n\r\n  // assigning color to tetrimino\r\n  let activeColorFiltered = tetrimino2[0].filter((color) => color > 0);\r\n  activeColor2 = activeColorFiltered[0];\r\n\r\n  activeTetrimino2 = [];\r\n  // Check to see if game has ended\r\n  for (let i = 3; i < 6; i++) {\r\n    // changed from 7 to 6\r\n    if (MATRIX2[0][i] < 0 || MATRIX2[1][i] < 0) {\r\n      gameEnded2 = true;\r\n    }\r\n  }\r\n  //delay briefly next tetremino placing on board\r\n  await sleep(500);\r\n\r\n  //placing tetrimino on matrice\r\n  if (!gameEnded2) {\r\n    for (let i = 3; i < 7; i++) {\r\n      if (tetrimino2[0][i - 3] > 0) {\r\n        MATRIX2[0][i] = activeColor2;\r\n        activeTetrimino2.push([0, i]);\r\n      }\r\n    }\r\n    for (let i = 3; i < 7; i++) {\r\n      if (tetrimino2[1][i - 3] > 0) {\r\n        MATRIX2[1][i] = activeColor2;\r\n        activeTetrimino2.push([1, i]);\r\n      }\r\n    }\r\n  }\r\n  endGame2();\r\n  paused2 = false;\r\n}\r\n\r\nconst lowerTetrimino = () => {\r\n  if (!stopped) {\r\n    for (let i = activeTetrimino.length - 1; i >= 0; i--) {\r\n      activeTetrimino[i][0] = activeTetrimino[i][0] + 1;\r\n    }\r\n    updateMatrix();\r\n  }\r\n};\r\n\r\nconst updateMatrix = () => {\r\n  clearPrevious();\r\n  for (let i = activeTetrimino.length - 1; i >= 0; i--) {\r\n    let x = activeTetrimino[i][0];\r\n    let y = activeTetrimino[i][1];\r\n    MATRIX[x][y] = activeColor;\r\n  }\r\n};\r\n\r\nconst lowerTetrimino2 = () => {\r\n  if (!stopped2) {\r\n    for (let i = activeTetrimino2.length - 1; i >= 0; i--) {\r\n      activeTetrimino2[i][0] = activeTetrimino2[i][0] + 1;\r\n    }\r\n    updateMatrix2();\r\n  }\r\n};\r\n\r\nconst updateMatrix2 = () => {\r\n  clearPrevious2();\r\n  for (let i = activeTetrimino2.length - 1; i >= 0; i--) {\r\n    let x = activeTetrimino2[i][0];\r\n    let y = activeTetrimino2[i][1];\r\n    MATRIX2[x][y] = activeColor2;\r\n  }\r\n};\r\n\r\nconst stopTest = () => {\r\n  for (let i = 0; i < activeTetrimino.length; i++) {\r\n    let newX = activeTetrimino[i][0] + 1;\r\n    let y = activeTetrimino[i][1];\r\n    if (MATRIX[newX][y] < 0) {\r\n      stopped = true;\r\n    }\r\n  }\r\n  if (stopped) {\r\n    for (let i = 0; i < activeTetrimino.length; i++) {\r\n      let x = activeTetrimino[i][0];\r\n      let y = activeTetrimino[i][1];\r\n      MATRIX[x][y] = -activeColor;\r\n    }\r\n\r\n    isStopped();\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isStopped = () => {\r\n  rowCompletedTest();\r\n  placeOnMatrix();\r\n  stopped = false;\r\n};\r\n\r\nconst stopTest2 = () => {\r\n  for (let i = 0; i < activeTetrimino2.length; i++) {\r\n    let newX = activeTetrimino2[i][0] + 1;\r\n    let y = activeTetrimino2[i][1];\r\n    if (MATRIX2[newX][y] < 0) {\r\n      stopped2 = true;\r\n    }\r\n  }\r\n  if (stopped2) {\r\n    for (let i = 0; i < activeTetrimino2.length; i++) {\r\n      let x = activeTetrimino2[i][0];\r\n      let y = activeTetrimino2[i][1];\r\n      MATRIX2[x][y] = -activeColor2;\r\n    }\r\n    isStopped2();\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isStopped2 = () => {\r\n  if (stopped2) {\r\n    rowCompletedTest2();\r\n    placeOnMatrix2();\r\n    stopped2 = false;\r\n  }\r\n};\r\n\r\nconst endGame = () => {\r\n  if (gameEnded2 && gameEnded) {\r\n    pauseAll = true;\r\n    winUpdater();\r\n  }\r\n};\r\n\r\nconst endGame2 = () => {\r\n  if (gameEnded2 && gameEnded) {\r\n    pauseAll = true;\r\n    winUpdater();\r\n  }\r\n};\r\n\r\n//////////////////////////////////* COLOR MANIPULATION //////////////////////////////////\r\n\r\nconst clearPrevious = () => {\r\n  for (let i = 0; i < MATRIX.length - 1; i++) {\r\n    for (let j = 0; j < MATRIX[i].length; j++) {\r\n      if (MATRIX[i][j] > 0) {\r\n        MATRIX[i][j] = 0;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst clearPrevious2 = () => {\r\n  for (let i = 0; i < MATRIX2.length - 1; i++) {\r\n    for (let j = 0; j < MATRIX2[i].length; j++) {\r\n      if (MATRIX2[i][j] > 0) {\r\n        MATRIX2[i][j] = 0;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst updateColor = () => {\r\n  paused = true;\r\n  const noColorChange = `var(--color-piece${0})`;\r\n\r\n  for (let i = 0; i < MATRIX.length - 1; i++) {\r\n    for (let j = 0; j < MATRIX[i].length; j++) {\r\n      if (Math.abs(MATRIX[i][j]) > 0) {\r\n        let color = Math.abs(MATRIX[i][j]);\r\n        let id = \"_\" + i + j;\r\n        let idToChange = document.getElementById(id);\r\n        idToChange.style.backgroundColor = `var(--color-piece${color})`;\r\n      } else if (MATRIX[i][j] === 0) {\r\n        let id2 = \"_\" + i + j;\r\n        let idToChange2 = document.getElementById(id2);\r\n        idToChange2.style.backgroundColor = noColorChange;\r\n      }\r\n    }\r\n  }\r\n  paused = false;\r\n};\r\n\r\nconst updateColor2 = () => {\r\n  paused2 = true;\r\n  const noColorChange = `var(--color-piece${0})`;\r\n  for (let i = 0; i < MATRIX2.length - 1; i++) {\r\n    for (let j = 0; j < MATRIX2[i].length; j++) {\r\n      if (Math.abs(MATRIX2[i][j]) > 0) {\r\n        let color = Math.abs(MATRIX2[i][j]);\r\n        let id = \"__\" + i + j;\r\n        let idToChange = document.getElementById(id);\r\n        idToChange.style.backgroundColor = `var(--color-piece${color})`;\r\n      } else if (MATRIX2[i][j] === 0) {\r\n        let id2 = \"__\" + i + j;\r\n        let idToChange2 = document.getElementById(id2);\r\n        idToChange2.style.backgroundColor = noColorChange;\r\n      }\r\n    }\r\n  }\r\n  paused2 = false;\r\n};\r\n\r\nconst rowCompletedTest = () => {\r\n  paused = true;\r\n  let rowsCleared = 0;\r\n  for (let i = 0; i < ROWS - 1; i++) {\r\n    if (MATRIX[i].every((value) => value < 0)) {\r\n      MATRIX.splice(i, 1);\r\n      MATRIX.unshift(Array(COLS).fill(0));\r\n      rowsCleared++;\r\n    }\r\n  }\r\n  if (rowsCleared > 0) {\r\n    points(rowsCleared);\r\n  }\r\n  paused = false;\r\n};\r\n\r\nconst rowCompletedTest2 = () => {\r\n  paused2 = true;\r\n  let rowsCleared = 0;\r\n  for (let i = 0; i < ROWS - 1; i++) {\r\n    if (MATRIX2[i].every((value) => value < 0)) {\r\n      MATRIX2.splice(i, 1);\r\n      MATRIX2.unshift(Array(COLS).fill(0));\r\n      rowsCleared++;\r\n    }\r\n  }\r\n  if (rowsCleared > 0) {\r\n    points2p(rowsCleared);\r\n  }\r\n  paused2 = false;\r\n};\r\n\r\n//////////////////////////////////* ATACK MOVES //////////////////////////////////////\r\n\r\nlet attacks = [];\r\nlet attacks2 = [];\r\n\r\nlet canAttack = true;\r\nlet canAttack2 = true;\r\nlet currentAttackGoing = false;\r\nlet currentAttackGoing2 = false;\r\n\r\nconst attack = () => {\r\n  if (attacks[0] === undefined || pauseAll) return;\r\n  //edge for levelUp. levelUp will not redeclare\r\n\r\n  let savedAttackState = canAttack;\r\n  if (canAttack) canAttack = false;\r\n  if (savedAttackState) {\r\n    if (attacks[0] === 2) {\r\n      // manipulate css and html\r\n      clearInterval(dropLoop2);\r\n      dropLoop2 = setIntervaldropLoop2 = setInterval(\r\n        dropInterval2,\r\n        rate[rateIndex] / 4\r\n      );\r\n      setTimeout(resetAttack2, 10000);\r\n    } else if (attacks[0] === 1) {\r\n      moves[65].func = right2;\r\n      moves[68].func = left2;\r\n      setTimeout(resetAttack1, 10000);\r\n    }\r\n    attacks.shift();\r\n    renderAttacks();\r\n  }\r\n};\r\n\r\nconst resetAttack1 = () => {\r\n  moves[65].func = left2;\r\n  moves[68].func = right2;\r\n  canAttack = true;\r\n};\r\n\r\nconst resetAttack2 = () => {\r\n  clearInterval(dropLoop2);\r\n  dropLoop2 = setInterval(dropInterval2, rate[rateIndex]);\r\n  canAttack = true;\r\n};\r\n\r\nconst attack2 = () => {\r\n  if (attacks2[0] === undefined || pauseAll) return;\r\n  //edge for levelUp. levelUp will not redeclare\r\n\r\n  let savedAttackState = canAttack2;\r\n  if (canAttack2) canAttack2 = false;\r\n  if (savedAttackState) {\r\n    if (attacks2[0] === 2) {\r\n      // manipulate css and html\r\n      clearInterval(dropLoop);\r\n      dropLoop = setInterval(dropInterval, rate[rateIndex] / 4);\r\n      setTimeout(reset2Attack2, 10000);\r\n    } else if (attacks2[0] === 1) {\r\n      moves[37].func = right;\r\n      moves[39].func = left;\r\n      setTimeout(reset2Attack1, 10000);\r\n    }\r\n    attacks2.shift();\r\n    renderAttacks();\r\n  }\r\n};\r\n\r\nconst reset2Attack1 = () => {\r\n  moves[37].func = left;\r\n  moves[39].func = right;\r\n  canAttack2 = true;\r\n};\r\n\r\nconst reset2Attack2 = () => {\r\n  clearInterval(dropLoop);\r\n  dropLoop = setInterval(dropInterval, rate[rateIndex]);\r\n  canAttack2 = true;\r\n};\r\n\r\nconst renderAttacks = () => {\r\n  // display amount of attack moves visually on screen\r\n  const displayAttacks = document.getElementById(\"attacks1\");\r\n  while (displayAttacks.firstChild) {\r\n    displayAttacks.removeChild(displayAttacks.firstChild);\r\n  }\r\n  for (let i = 0; i < attacks.length; i++) {\r\n    if (attacks[i] === 2) {\r\n      const image = document.createElement(\"img\");\r\n      image.src = \"./icons/cherryBomb2.png\";\r\n      displayAttacks.appendChild(image);\r\n    } else if (attacks[i] === 1) {\r\n      const image2 = document.createElement(\"img\");\r\n      image2.src = \"./icons/weakBomb2.png\";\r\n      displayAttacks.appendChild(image2);\r\n    }\r\n  }\r\n\r\n  const displayAttacks2 = document.getElementById(\"attacks2\");\r\n\r\n  while (displayAttacks2.firstChild) {\r\n    displayAttacks2.removeChild(displayAttacks2.firstChild);\r\n  }\r\n  for (let i = 0; i < attacks2.length; i++) {\r\n    if (attacks2[i] === 2) {\r\n      const image = document.createElement(\"img\");\r\n      image.src = \"./icons/cherryBomb2.png\";\r\n      displayAttacks2.appendChild(image);\r\n    } else if (attacks2[i] === 1) {\r\n      const image2 = document.createElement(\"img\");\r\n      image2.src = \"./icons/weakBomb2.png\";\r\n      displayAttacks2.appendChild(image2);\r\n    }\r\n  }\r\n};\r\n\r\n//////////////////////////////* SCORING ////////////////////////////////\r\n\r\nlet player1Wins = 0;\r\nlet player2Wins = 0;\r\n\r\nlet points1 = 0;\r\nlet points2 = 0;\r\n\r\nconst pointsFor1Line = 100;\r\nconst pointsPerLineSoftDrop = 1;\r\n\r\nconst levelMultiplier = [0, 1, 1, 2, 2, 3, 3, 4, 4, 5];\r\nconst lineMultiplier = [1, 1, 4, 9, 20];\r\n\r\nlet perfectClearBonus = 1;\r\n\r\nconst points = (rowsCleared) => {\r\n  const perfectClearTest = MATRIX[15].filter((el) => el < 0 || el > 0);\r\n  if (perfectClearTest.length === 0) perfectClearBonus = 10;\r\n\r\n  let levelX = level;\r\n  if (levelX > 9) levelX = 9;\r\n\r\n  points1 =\r\n    points1 +\r\n    pointsFor1Line *\r\n      lineMultiplier[rowsCleared] *\r\n      levelMultiplier[levelX] *\r\n      perfectClearBonus;\r\n  document.getElementById(\"points1\").innerHTML = points1;\r\n\r\n  if (rowsCleared === 3) {\r\n    attacks.push(1);\r\n    renderAttacks();\r\n  }\r\n  if (rowsCleared === 4) {\r\n    attacks.push(2);\r\n    renderAttacks();\r\n  }\r\n\r\n  perfectClearBonus = 1;\r\n};\r\n\r\nconst points2p = (rowsCleared) => {\r\n  const perfectClearTest = MATRIX2[15].filter((el) => el < 0 || el > 0);\r\n  if (perfectClearTest.length === 0) perfectClearBonus = 10;\r\n\r\n  let levelX = level;\r\n  if (levelX > 9) levelX = 9;\r\n  points2 =\r\n    points2 +\r\n    pointsFor1Line *\r\n      lineMultiplier[rowsCleared] *\r\n      levelMultiplier[levelX] *\r\n      perfectClearBonus;\r\n  document.getElementById(\"points2\").innerHTML = points2;\r\n\r\n  // add small attack if 3 rows cleared together\r\n  if (rowsCleared === 3) {\r\n    attacks2.push(1);\r\n    renderAttacks();\r\n\r\n    // attack2.style.color = \"var(--color-piece2)\";\r\n  }\r\n  //add big attack if 4 rows cleared together\r\n  if (rowsCleared === 4) {\r\n    attacks2.push(2);\r\n    renderAttacks();\r\n    // attacks2.style.color = \"var(--color-piece3)\";\r\n  }\r\n\r\n  perfectClearBonus = 1;\r\n};\r\n\r\nconst winUpdater = () => {\r\n  if (points1 > points2) {\r\n    player1Wins++;\r\n    document.getElementById(\"player1-wins\").innerHTML = player1Wins;\r\n  } else if (points1 < points2) {\r\n    player2Wins++;\r\n    document.getElementById(\"player2-wins\").innerHTML = player2Wins;\r\n  }\r\n};\r\n\r\n/*\r\nScoring:\r\n\r\nRules: (Original Sega scoring System)\r\n\r\nLevel Multiplier:\r\n\r\nLv 1-2 = 1X\r\nLv 3-4 = 2x\r\nLv 5-6 = 3x\r\nLv 7-8 = 4X\r\nLv 9 = 5X\r\n\r\nClearing Rows:\r\n\r\npointsFor1Line = 100\r\n\r\n1 Row Cleared = 1X\r\n2 Rows Cleared = 4X \r\n3 Rows Cleared = 9x \r\n4 Rows Cleared = 20x\r\n\r\nPerfect Clears add a 10X Bonus\r\n\r\n(*) Level Multiplier\r\n\r\nSoft Drop:\r\n\r\n1 point per squre * level Multiplier\r\n\r\n(*) \r\n\r\n*/\r\n\r\n////////////////////////////////////* MOVEMENT ///////////////////////////////////////\r\n\r\n////////* LEFT/RIGHT\r\n\r\nconst right = () => {\r\n  paused = true;\r\n\r\n  let isSafe = true;\r\n  for (let i = 0; i < activeTetrimino.length; i++) {\r\n    let x = activeTetrimino[i][0];\r\n    let y = activeTetrimino[i][1];\r\n    if (MATRIX[x][y + 1] < 0 || MATRIX[x][y + 1] === undefined) {\r\n      isSafe = false;\r\n    }\r\n  }\r\n  if (isSafe) {\r\n    for (let i = 0; i < activeTetrimino.length; i++) {\r\n      activeTetrimino[i][1] = activeTetrimino[i][1] + 1;\r\n    }\r\n    updateMatrix();\r\n    stopTest();\r\n  }\r\n  paused = false;\r\n};\r\n\r\nconst right2 = () => {\r\n  let isSafe = true;\r\n  for (let i = 0; i < activeTetrimino2.length; i++) {\r\n    let x = activeTetrimino2[i][0];\r\n    let y = activeTetrimino2[i][1];\r\n    if (MATRIX2[x][y + 1] < 0 || MATRIX2[x][y + 1] === undefined) {\r\n      isSafe = false;\r\n    }\r\n  }\r\n  if (isSafe) {\r\n    for (let i = 0; i < activeTetrimino2.length; i++) {\r\n      activeTetrimino2[i][1] = activeTetrimino2[i][1] + 1;\r\n    }\r\n    updateMatrix2();\r\n    stopTest2();\r\n  }\r\n};\r\n\r\nconst left = () => {\r\n  paused = true;\r\n\r\n  let isSafe = true;\r\n  for (let i = 0; i < activeTetrimino.length; i++) {\r\n    let x = activeTetrimino[i][0];\r\n    let y = activeTetrimino[i][1];\r\n    if (MATRIX[x][y - 1] < 0 || MATRIX[x][y - 1] === undefined) {\r\n      isSafe = false;\r\n    }\r\n  }\r\n  if (isSafe) {\r\n    for (let i = 0; i < activeTetrimino.length; i++) {\r\n      activeTetrimino[i][1] = activeTetrimino[i][1] - 1;\r\n    }\r\n    updateMatrix();\r\n    stopTest();\r\n  }\r\n  paused = false;\r\n};\r\n\r\nconst left2 = () => {\r\n  paused2 = true;\r\n\r\n  let isSafe = true;\r\n  for (let i = 0; i < activeTetrimino2.length; i++) {\r\n    let x = activeTetrimino2[i][0];\r\n    let y = activeTetrimino2[i][1];\r\n    if (MATRIX2[x][y - 1] < 0 || MATRIX2[x][y - 1] === undefined) {\r\n      isSafe = false;\r\n    }\r\n  }\r\n  if (isSafe) {\r\n    for (let i = 0; i < activeTetrimino2.length; i++) {\r\n      activeTetrimino2[i][1] = activeTetrimino2[i][1] - 1;\r\n    }\r\n    updateMatrix2();\r\n    stopTest2();\r\n  }\r\n  paused2 = false;\r\n};\r\n\r\n//////////* QUICK DROP\r\n\r\nconst dropPoints = 1;\r\n\r\nconst drop = () => {\r\n  if (!pauseAll) {\r\n    paused = true;\r\n    const isStopped = stopTest();\r\n\r\n    if (!isStopped && !gameEnded) {\r\n      lowerTetrimino();\r\n      const levelX = level;\r\n      if (levelX > 9) levelX = 9;\r\n      points1 = points1 + dropPoints * levelMultiplier[levelX];\r\n      document.getElementById(\"points1\").innerHTML = points1;\r\n    }\r\n    paused = false;\r\n  }\r\n};\r\n\r\nconst drop2 = () => {\r\n  if (!pauseAll) {\r\n    paused2 = true;\r\n    const isStopped = stopTest2();\r\n    if (!isStopped && !gameEnded2) {\r\n      lowerTetrimino2();\r\n      const levelX = level;\r\n      if (levelX > 9) levelX = 9;\r\n      points2 = points2 + dropPoints * levelMultiplier[levelX];\r\n      document.getElementById(\"points2\").innerHTML = points2;\r\n    }\r\n    paused2 = false;\r\n  }\r\n};\r\n\r\n//////////* SPIN\r\n\r\nconst LSPIN = [\r\n  [\r\n    [-1, -2],\r\n    [-1, 0],\r\n    [0, -1],\r\n    [0, -1],\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [-1, 1],\r\n    [-2, 2],\r\n    [-1, -1],\r\n  ],\r\n  [\r\n    [0, 1],\r\n    [0, 1],\r\n    [1, 0],\r\n    [1, 2],\r\n  ],\r\n  [\r\n    [1, 1],\r\n    [2, -2],\r\n    [1, -1],\r\n    [0, 0],\r\n  ],\r\n];\r\n\r\nconst JSPIN = [\r\n  [\r\n    [-1, 0],\r\n    [-2, 1],\r\n    [-1, -1],\r\n    [0, -2],\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [0, 0],\r\n    [-1, 2],\r\n    [-1, 2],\r\n  ],\r\n  [\r\n    [0, 2],\r\n    [1, 1],\r\n    [2, -1],\r\n    [1, 0],\r\n  ],\r\n  [\r\n    [1, -2],\r\n    [1, -2],\r\n    [0, 0],\r\n    [0, 0],\r\n  ],\r\n];\r\n\r\nconst SSPIN = [\r\n  [\r\n    [-1, -1],\r\n    [0, -2],\r\n    [-1, 1],\r\n    [0, 0],\r\n  ],\r\n  [\r\n    [1, 1],\r\n    [0, 2],\r\n    [1, -1],\r\n    [0, 0],\r\n  ],\r\n];\r\n\r\nconst ZSPIN = [\r\n  [\r\n    [-1, 1],\r\n    [0, -1],\r\n    [-1, 0],\r\n    [0, -2],\r\n  ],\r\n  [\r\n    [1, -1],\r\n    [0, 1],\r\n    [1, 0],\r\n    [0, 2],\r\n  ],\r\n];\r\n\r\nconst OSPIN = [\r\n  [\r\n    [0, 0],\r\n    [0, 0],\r\n    [0, 0],\r\n    [0, 0],\r\n  ],\r\n];\r\n\r\nconst TSPIN = [\r\n  [\r\n    [-1, 1],\r\n    [0, -1],\r\n    [0, -1],\r\n    [0, 0],\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [0, 0],\r\n    [0, 0],\r\n    [-1, 1],\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [0, 1],\r\n    [0, 1],\r\n    [1, -1],\r\n  ],\r\n  [\r\n    [1, -1],\r\n    [0, 0],\r\n    [0, 0],\r\n    [0, 0],\r\n  ],\r\n];\r\n\r\nconst ISPIN = [\r\n  [\r\n    [-1, 1],\r\n    [0, 0],\r\n    [1, -1],\r\n    [2, -2],\r\n  ],\r\n  [\r\n    [1, -1],\r\n    [0, 0],\r\n    [-1, 1],\r\n    [-2, 2],\r\n  ],\r\n  [\r\n    [-1, 2],\r\n    [0, 1],\r\n    [1, 0],\r\n    [2, -1],\r\n  ],\r\n  [\r\n    [1, -2],\r\n    [0, -1],\r\n    [-1, 0],\r\n    [-2, 1],\r\n  ],\r\n];\r\n\r\nconst SPINARR = [LSPIN, JSPIN, SSPIN, ZSPIN, OSPIN, TSPIN, ISPIN];\r\n\r\nlet currentSpin = 0;\r\nlet currentSpin2 = 0;\r\n\r\nconst spin = () => {\r\n  paused = true;\r\n  if (!gameEnded) {\r\n    let sumArr = [];\r\n    let spinArr = SPINARR[activeColor - 1][currentSpin];\r\n\r\n    for (let i = 0; i < spinArr.length; i++) {\r\n      let x = activeTetrimino[i][0];\r\n      let y = activeTetrimino[i][1];\r\n      let sx = spinArr[i][0];\r\n      let sy = spinArr[i][1];\r\n      sumArr.push([x + sx, y + sy]);\r\n    }\r\n    let rejected = spinValidator(sumArr);\r\n\r\n    if (rejected) {\r\n      paused = false;\r\n      return false;\r\n    } else {\r\n      activeTetrimino = sumArr;\r\n      updateMatrix();\r\n      if (currentSpin === SPINARR[activeColor - 1].length - 1) {\r\n        currentSpin = 0;\r\n      } else {\r\n        currentSpin++;\r\n      }\r\n    }\r\n  }\r\n  paused = false;\r\n};\r\n\r\nconst spinValidator = (arr) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let x = arr[i][0];\r\n    let y = arr[i][1];\r\n    if (x < 0 || y < 0 || MATRIX[x][y] < 0 || MATRIX[x][y] === undefined) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst spin2 = () => {\r\n  paused2 = true;\r\n  if (!gameEnded2) {\r\n    let sumArr = [];\r\n    let spinArr = SPINARR[activeColor2 - 1][currentSpin2];\r\n\r\n    for (let i = 0; i < spinArr.length; i++) {\r\n      let x = activeTetrimino2[i][0];\r\n      let y = activeTetrimino2[i][1];\r\n      let sx = spinArr[i][0];\r\n      let sy = spinArr[i][1];\r\n      sumArr.push([x + sx, y + sy]);\r\n    }\r\n\r\n    let rejected = spinValidator2(sumArr);\r\n\r\n    if (rejected) {\r\n      paused2 = false;\r\n      return false;\r\n    } else {\r\n      activeTetrimino2 = sumArr;\r\n      updateMatrix2();\r\n      if (currentSpin2 === SPINARR[activeColor2 - 1].length - 1) {\r\n        currentSpin2 = 0;\r\n      } else {\r\n        currentSpin2++;\r\n      }\r\n    }\r\n  }\r\n  paused2 = false;\r\n};\r\n\r\nconst spinValidator2 = (arr) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let x = arr[i][0];\r\n    let y = arr[i][1];\r\n    if (x < 0 || y < 0 || MATRIX2[x][y] < 0 || MATRIX2[x][y] === undefined) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n//////////* Keypresses\r\n\r\nconst moves = {\r\n  37: { pressed: false, func: left, firstPress: false },\r\n  39: { pressed: false, func: right, firstPress: false },\r\n  40: { pressed: false, func: drop, firstPress: false },\r\n  65: { pressed: false, func: left2, firstPress: false },\r\n  68: { pressed: false, func: right2, firstPress: false },\r\n  83: { pressed: false, func: drop2, firstPress: false },\r\n};\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  if (moves[e.keyCode]) {\r\n    moves[e.keyCode].pressed = true;\r\n    if (moves[e.keyCode].firstPress === false) {\r\n      moves[e.keyCode].func();\r\n      timeStart = performance.now();\r\n      moves[e.keyCode].firstPress = true;\r\n    }\r\n  }\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", (e) => {\r\n  if (moves[e.keyCode]) {\r\n    moves[e.keyCode].pressed = false;\r\n  }\r\n  if (moves[e.keyCode]) {\r\n    moves[e.keyCode].firstPress = false;\r\n  }\r\n  switch (e.keyCode) {\r\n    case 38:\r\n      spin();\r\n      break;\r\n    case 87:\r\n      spin2();\r\n      break;\r\n    case 32:\r\n      pauseFunc();\r\n      break;\r\n    case 80:\r\n      playFunc();\r\n      break;\r\n    case 79:\r\n      restartFunc();\r\n      break;\r\n    case 13:\r\n      attack();\r\n      break;\r\n    case 81:\r\n      attack2();\r\n      break;\r\n  }\r\n});\r\n\r\nconst executeFirstMove = () => {\r\n  Object.keys(moves).forEach((key) => {\r\n    moves[key].firstPress && moves[key].func();\r\n  });\r\n};\r\n\r\nconst executeMoves = () => {\r\n  Object.keys(moves).forEach((key) => {\r\n    moves[key].pressed && moves[key].func();\r\n  });\r\n};\r\n\r\nconst executeDrop = () => {\r\n  if (moves[40].pressed === true) moves[40].func();\r\n  if (moves[83].pressed === true) moves[83].func();\r\n};\r\n\r\n// const moveInterval = setInterval(executeMoves, 120);\r\n\r\n/* \r\n\r\n\r\nPlan for ATTACK FEATURE\r\n\r\nHow to Earn: 4line clears for weak attack, 4 lines cleared together for strong attack. \r\n\r\nearn bomb?\r\n\r\n*/\r\n"],"names":["MATRIX","MATRIX2","TETRIMINOS","pauseAll","play","document","getElementById","playFunc","gameEnded","gameEnded2","style","display","animatePage","placeOnMatrix","placeOnMatrix2","levelTimer","setInterval","levelFunc","dropLoop","dropInterval","rate","rateIndex","dropLoop2","dropInterval2","timeStart","performance","now","addEventListener","pauseFunc","color","cancelAnimationFrame","animateInterval","restartFunc","restart","paused","clearInterval","level","timer","points1","points2","innerHTML","activeTetrimino","activeTetrimino2","updateColor","updateColor2","timeLapsed","drop1st","executeDrop","executeMoves","requestAnimationFrame","changeLevel","moves","pressed","stopTest","lowerTetrimino","paused2","stopTest2","lowerTetrimino2","currentAttackGoing","currentAttackGoing2","activeColor","tetrimino","activeColor2","tetrimino2","stopped","stopped2","sleep","time","Promise","resolve","setTimeout","async","currentSpin","Math","floor","random","activeColorFiltered","filter","i","push","endGame","currentSpin2","endGame2","length","updateMatrix","clearPrevious","x","y","updateMatrix2","clearPrevious2","newX","isStopped","rowCompletedTest","isStopped2","rowCompletedTest2","winUpdater","j","abs","id","backgroundColor","id2","rowsCleared","ROWS","every","value","splice","unshift","Array","fill","points","points2p","attacks","attacks2","canAttack","canAttack2","resetAttack1","func","left2","right2","resetAttack2","reset2Attack1","left","right","reset2Attack2","renderAttacks","displayAttacks","firstChild","removeChild","image","createElement","src","appendChild","image2","displayAttacks2","player1Wins","player2Wins","levelMultiplier","lineMultiplier","perfectClearBonus","el","levelX","isSafe","undefined","SPINARR","firstPress","e","keyCode","sumArr","spinArr","sx","sy","arr","spinValidator","spin","spinValidator2","spin2","savedAttackState","setIntervaldropLoop2","shift","attack","attack2","Object","keys","forEach","key"],"sourceRoot":""}